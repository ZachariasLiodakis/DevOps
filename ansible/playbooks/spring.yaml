---
- hosts: devops-vm

  pre_tasks:
  - name: Check if PostgreSQL 16 is installed
    shell: psql --version | grep "16"
    register: postgres_version_result
    ignore_errors: true

  - name: Stat PostgreSQL 16 config file
    stat:
      path: /etc/postgresql/16/main/postgresql.conf
    register: postgres_16_conf

  - name: Set PostgreSQL installed fact
    set_fact:
      postgres_installed: "{{ postgres_version_result.rc == 0 or postgres_16_conf.stat.exists }}"

  - name: Include postgres-16 playbook if PostgreSQL 16 is not installed
    include_tasks: postgres-16.yaml
    when: not postgres_installed

  - name: Ensure Postgres user exists
    become: yes
    postgresql_user:
      name: "{{ db.user }}"
      password: "{{ db.password }}"
      login_user: postgres
      login_password: "{{ db.postgres_password }}"
      login_host: localhost
      login_unix_socket: /var/run/postgresql
    tags: [db]

  - name: Ensure Postgres database exists
    become: yes
    postgresql_db:
      name: "{{ db.name }}"
      owner: "{{ db.user }}"
      login_user: postgres
      login_password: "{{ db.postgres_password }}"
      login_host: localhost
      login_unix_socket: /var/run/postgresql
    tags: [db]

  - name: Install Java
    apt:
        name: openjdk-21-jdk
        state: present
        update_cache: yes
    become: yes

  tasks:
      - name: "debug appdir"
        ansible.builtin.debug:
          msg: "appdir {{ansible_user_dir}}"

      - name: "Clone the Spring repository"
        git:
            repo: "https://github.com/ZachariasLiodakis/DevOps.git"
            dest: "{{ appdir }}"
            version: "{{ branch }}"
            force: yes

      - name: "Populate application.properties"
        lineinfile:
          dest: "{{ appdir }}/Akinita/Akinita/src/main/resources/application.properties"
          state: present
          regexp: "^{{item.key}}="
          line: "{{item.key}}={{item.value}}"
        with_items:
          - "{{app.env | dict2items}}"

      
      - name: "Build spring project"
        block:
        - name: Ensure mvnw is executable
          file:
            path: "{{ appdir }}/Akinita/Akinita/mvnw"
            mode: '0755'
            state: file
          become: yes

        - name: "Build the Spring application"
          command: "./mvnw package -Dmaven.test.skip "
          args:
              chdir: "{{ appdir }}/Akinita/Akinita"

        rescue:

        - name: Fetch the SHA-512 checksum for Maven 3.9.9
          get_url:
            url: https://downloads.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.zip.sha512
            dest: /tmp/maven_sha512.txt
            validate_certs: yes
            force: yes

        - name: Read the SHA-512 checksum from the file
          command: cat /tmp/maven_sha512.txt
          register: sha512_checksum

        - name: Replace the distributionSha512Sum line in maven-wrapper.properties
          replace:
            path: "{{ appdir }}/Akinita/Akinita/.mvn/wrapper/maven-wrapper.properties"
            regexp: '^distributionSha'
            replace: "distributionSha512Sum={{ sha512_checksum.stdout }}"
        
        - name: Clean up the temporary file
          file:
            path: /tmp/maven_sha512.txt
            state: absent
          when: sha512_checksum is defined
        
        always:
          - name: Make mvnw executable
            file:
              path: "{{ appdir }}/Akinita/Akinita/mvnw"
              mode: '0755'
              state: file
              
          - name: "Build the Spring application"
            command: "./mvnw package -Dmaven.test.skip"
            args:
                chdir: "{{ appdir }}/Akinita/Akinita"


      - name: copy spring service file
        template:
          src: ../files/spring.service.j2
          dest: "/etc/systemd/system/spring.service"
        become: yes
        become_user: root
        notify: restart spring

      - name: reload spring service
        service:
          name: spring
          state: restarted
        become: yes

      - name: ensure spring service started
        service:
          name: spring
          state: started
          enabled: yes
        become: yes

      - name: "APT - install nginx"
        apt:
          name: nginx
          update_cache: yes
        become: yes

      - name: copy nginx conf file
        template:
          src: ../files/nginx.http.j2
          dest: "/etc/nginx/sites-available/spring"
        become: yes

      - name: enable spring site in nginx
        file:
          src: "/etc/nginx/sites-available/spring"
          dest: "/etc/nginx/sites-enabled/spring"
          state: link
        become: yes
        notify: restart nginx

      - name: de-activate default nginx site
        file:
          path: /etc/nginx/sites-enabled/default
          state: absent
        become: yes
        notify: restart nginx

  handlers:
  - name: restart postgres
    service:
      name: postgresql
      state: restarted
    become: yes

  - name: restart spring
    service:
      name: spring
      state: restarted
    become: yes

  - name: restart nginx
    service:
      name: nginx
      state: restarted
    become: yes